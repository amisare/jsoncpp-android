#
# Created by GuHaijun on 2023/6/26.
#

LIBJSONCPP_MODULE_USER_LOCAL_PATH:=$(LOCAL_PATH)

LOCAL_PATH := $(call my-dir)
include $(CLEAR_VARS)

# LIBJSONCPP_LIB_TYPE := STATIC
ifeq ($(LIBJSONCPP_LIB_TYPE),)
    LIBJSONCPP_LIB_TYPE := SHARED
endif

$(warning LIBJSONCPP_LIB_TYPE: $(LIBJSONCPP_LIB_TYPE))

LIBJSONCPP_LOCAL_STATIC_LIBRARIES :=
LIBJSONCPP_LOCAL_SHARED_LIBRARIES :=

LIBJSONCPP_LOCAL_C_INCLUDES := \
	$(LOCAL_PATH)/include \

LIBJSONCPP_LOCAL_EXPORT_C_INCLUDES := $(LIBJSONCPP_LOCAL_C_INCLUDES)

LIBJSONCPP_LIBS_DIR := lib/$(TARGET_ARCH_ABI)

ifeq ($(LIBJSONCPP_LIB_TYPE), STATIC)
    LIBJSONCPP_LIB_SUFFIX := .a
    
    include $(CLEAR_VARS)
    LOCAL_MODULE := jsoncpp_static
    LOCAL_SRC_FILES := $(LIBJSONCPP_LIBS_DIR)/lib$(LOCAL_MODULE)$(LIBJSONCPP_LIB_SUFFIX)
    LOCAL_EXPORT_C_INCLUDES := $(LIBJSONCPP_LOCAL_EXPORT_C_INCLUDES)
    ifeq ($(filter $(modules-get-list), $(LOCAL_MODULE)),)
        include $(PREBUILT_$(LIBJSONCPP_LIB_TYPE)_LIBRARY)
    endif
    LIBJSONCPP_LOCAL_$(LIBJSONCPP_LIB_TYPE)_LIBRARIES += $(LOCAL_MODULE)
else 
    LIBJSONCPP_LIB_SUFFIX := .so

    include $(CLEAR_VARS)
    LOCAL_MODULE := jsoncpp
    LOCAL_SRC_FILES := $(LIBJSONCPP_LIBS_DIR)/lib$(LOCAL_MODULE)$(LIBJSONCPP_LIB_SUFFIX)
    LOCAL_EXPORT_C_INCLUDES := $(LIBJSONCPP_LOCAL_EXPORT_C_INCLUDES)
    ifeq ($(filter $(modules-get-list), $(LOCAL_MODULE)),)
        include $(PREBUILT_$(LIBJSONCPP_LIB_TYPE)_LIBRARY)
    endif
    LIBJSONCPP_LOCAL_$(LIBJSONCPP_LIB_TYPE)_LIBRARIES += $(LOCAL_MODULE)
endif

LOCAL_PATH:=$(LIBJSONCPP_MODULE_USER_LOCAL_PATH)
